{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cantin\\\\Documents\\\\projetnuages\\\\front\\\\src\\\\pages\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [direction, setDirection] = useState({\n    x: 1,\n    y: 1\n  });\n  const [color, setColor] = useState(\"red\");\n  useEffect(() => {\n    const moveCube = () => {\n      setPosition(prevPosition => {\n        const nextX = prevPosition.x + direction.x * 5;\n        const nextY = prevPosition.y + direction.y * 5;\n        const gameArea = document.querySelector(\".Game\");\n        const cubeSize = 50; // Assumed size of the cube in pixels\n\n        if (!gameArea) return prevPosition;\n        const {\n          clientWidth,\n          clientHeight\n        } = gameArea;\n        let newDirectionX = direction.x;\n        let newDirectionY = direction.y;\n        let newColor = color;\n        if (nextX <= 0 || nextX + cubeSize >= clientWidth) {\n          newDirectionX *= -1;\n          newColor = getRandomColor();\n        }\n        if (nextY <= 0 || nextY + cubeSize >= clientHeight) {\n          newDirectionY *= -1;\n          newColor = getRandomColor();\n        }\n        setDirection({\n          x: newDirectionX,\n          y: newDirectionY\n        });\n        setColor(newColor);\n        return {\n          x: nextX,\n          y: nextY\n        };\n      });\n    };\n    const interval = setInterval(moveCube, 50);\n    return () => clearInterval(interval);\n  }, [direction, color]);\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    style: {\n      position: \"relative\",\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cube\",\n      style: {\n        position: \"absolute\",\n        width: \"50px\",\n        height: \"50px\",\n        backgroundColor: color,\n        transform: `translate(${position.x}px, ${position.y}px)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Lr0X7ykrVSRzA8dFKI0/BexDkno=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Game","_s","position","setPosition","x","y","direction","setDirection","color","setColor","moveCube","prevPosition","nextX","nextY","gameArea","document","querySelector","cubeSize","clientWidth","clientHeight","newDirectionX","newDirectionY","newColor","getRandomColor","interval","setInterval","clearInterval","letters","i","Math","floor","random","className","style","width","window","innerWidth","height","innerHeight","children","backgroundColor","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cantin/Documents/projetnuages/front/src/pages/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [direction, setDirection] = useState({ x: 1, y: 1 });\r\n  const [color, setColor] = useState(\"red\");\r\n\r\n  useEffect(() => {\r\n    const moveCube = () => {\r\n      setPosition((prevPosition) => {\r\n        const nextX = prevPosition.x + direction.x * 5;\r\n        const nextY = prevPosition.y + direction.y * 5;\r\n\r\n        const gameArea = document.querySelector(\".Game\");\r\n        const cubeSize = 50; // Assumed size of the cube in pixels\r\n\r\n        if (!gameArea) return prevPosition;\r\n\r\n        const { clientWidth, clientHeight } = gameArea;\r\n\r\n        let newDirectionX = direction.x;\r\n        let newDirectionY = direction.y;\r\n        let newColor = color;\r\n\r\n        if (nextX <= 0 || nextX + cubeSize >= clientWidth) {\r\n          newDirectionX *= -1;\r\n          newColor = getRandomColor();\r\n        }\r\n\r\n        if (nextY <= 0 || nextY + cubeSize >= clientHeight) {\r\n          newDirectionY *= -1;\r\n          newColor = getRandomColor();\r\n        }\r\n\r\n        setDirection({ x: newDirectionX, y: newDirectionY });\r\n        setColor(newColor);\r\n\r\n        return { x: nextX, y: nextY };\r\n      });\r\n    };\r\n\r\n    const interval = setInterval(moveCube, 50);\r\n    return () => clearInterval(interval);\r\n  }, [direction, color]);\r\n\r\n  const getRandomColor = () => {\r\n    const letters = \"0123456789ABCDEF\";\r\n    let color = \"#\";\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Game\" style={{ position: \"relative\", width: window.innerWidth, height: window.innerHeight }}>\r\n      <div\r\n        className=\"Cube\"\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          backgroundColor: color,\r\n          transform: `translate(${position.x}px, ${position.y}px)`\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}